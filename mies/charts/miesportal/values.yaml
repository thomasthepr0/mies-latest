# Default values for miesportal.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

accountId: "448658572737"
repository: 448658572737.dkr.ecr.ap-southeast-1.amazonaws.com
mesh: customer001

appsettings:
  Jwt:
    Key: "ThisismySecretKey"
    Issuer: "Test.com"
  Logging:
    LogLevel:
      Default: "Information"
      Microsoft: "Warning"
      Microsoft.Hosting.Lifetime: "Information"
  AllowedHosts: "*"
  remedyWebService:
    userName: "webservices"
    password: "NEC@Portal"
  smtp:
    isEnabled: true
    host: "ec2-54-169-131-200.ap-southeast-1.compute.amazonaws.com"
    port: 25
  session:
    timeout: 60
  AppInfo:
    ServerHost: "S1"
    Version: "1.0.0"
  2FA:
    TOTP:
      AuthenticatorAppLabel: "MIES Portal"
      QRCodePixelsPerModule: 4
  OIDC:
    tenant: "eafe62e9-0e77-421e-abed-0f8d291a4d29"
    clientId: "246f08c8-4100-481c-a0cc-c807df4c02b7"
    redirectUri: "https://localhost:44331/Login/signin-oidc"


webapp:
  id: webapp
  replicaCount: 1
  podLabels:
   app: webapp
   tier: frontend 
  image:   
    pullPolicy: Always
    tag: v7
  resources: {}

webservice:
  id: webservice
  replicaCount: 1
  podLabels:
   app: webservice
   tier: backend 
  image:   
    pullPolicy: Always
    tag: v7
  resources: {}

webapi:
  id: webapi
  replicaCount: 1
  podLabels:
   app: webapi
   tier: backend 
  image:   
    pullPolicy: Always
    tag: v7
  resources: {}

sqlserver:
  id: sqlserver
  password: 0Kupator
  licencekey: 0
  image:
     pullPolicy: Always     
  pvc:
    id: efs-sqlsystem
    storageClassName: efs-sqlsystem01
  podLabels:
   app: sqlserver
   tier: db

workerservice:
  id: workerservice
  podLabels:
   app: workerservice
   tier: backend 
  image:   
    pullPolicy: Always
    tag: v7
  resources: {}

externalsecrets:
  id: externalsecrets 




replicaCount: 1

image:
  repository: nginx
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
